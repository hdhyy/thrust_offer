#include <bits/stdc++.h>
using namespace std;
/**
 * 求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？
 * 为此他特别数了一下1~13中包含1的数字有1、10、11、12、13因此共出现6次,但是对于后面问题他就没辙了。
 * ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数（从1 到 n 中1出现的次数）。
 **/
/**
 * 从个位的1开始算，加到最高位的1的情况
 * 个位1的个数*1，十位*10，百位*100，以此类推
 * 分析各个位为0,1,>=2的情况，+8来表示是否进位，(a+8)/10*i，a = n / i
 * 0和>=2的情况，都是(a+8)/10*i
 * 1的情况，是(a+8)/10*i+(b+1),b = n % i
 **/
class Solution
{
public:
    int NumberOf1Between1AndN_Solution(int n)
    {
        int ones = 0;
        for (long i = 1; i <= n; i *= 10)
        {
            ones += (n / i + 8) /10 * i + (n / i % 10 == 1 ? n % i + 1 : 0);
        }
        return ones;
    }
};